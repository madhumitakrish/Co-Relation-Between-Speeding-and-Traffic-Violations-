source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
?cv.glm()
source('~/manual_cv.R')
detach(Default)
detach(Default)
detach(Default)
source('~/manual_cv.R')
myCost <- function(r, pi=0){
mean(abs(r-pi) > 0.5)
}
source('~/manual_cv.R')
detach(Default)
detach(Default)
detach(Default)
cv.error.5$delta
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
?print()
source('~/manual_cv.R')
numFolds
source('~/manual_cv.R')
numFolds
source('~/manual_cv.R')
?nrows()
?nRows()
source('~/manual_cv.R')
numFolds
myFolds
source('~/manual_cv.R')
myFolds
source('~/manual_cv.R')
myFolds
size(N)
length(N)
length(Default)
nrow(Default)
x <- 10
y <- 20
Default[x:y]
Default[x:y,]
source('~/manual_cv.R')
detach(Default)
detach(Default)
detach(Default)
detach(Default)
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
Default[train,]
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
View(glm.fit)
source('~/manual_cv.R')
source('~/manual_cv.R')
View(cv.error.5)
source('~/manual_cv.R')
cv.error.k
source('~/manual_cv.R')
x <- 1000
y <- sample(x, x/2)
View(y)
str(y)
glm(default ~ balance + income, family=binomial, subset=y)
source('~/manual_cv.R')
train <- Default[10,]
train <- rowval:foldSize
rowval<- 10
train <- rowval:20
rm(list=ls())
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
detach(Default)
source('~/manual_cv.R')
cv.error.k
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
cv.error.k
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
test <- glm(default ~ balance + income, family=binomial, subset=1:20)
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
?rep()
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
attach(Default)
View(Default)
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/lab6_code.R')
rm(list=ls())
library(ISLR)
library(boot)
# Name: Andrew Weathers
# Date: 5 October 2018
# Purpose: Practice using resampling methods
set.seed(42)
attach(Default)
n <- nrow(Default)
train <- sample(n, n/2)
test <- seq(n)[-train]
# 1) Validation Set
glm.fit <- glm(default ~ balance + income, family=binomial, subset=train)
pred.probs <- predict(glm.fit, Default[test,], type="response")
pred.default <- rep("No", n/2)
pred.default[pred.probs > 0.5] <- "yes"
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/lab6_code.R')
source('~/lab6_code.R')
source('~/lab6_code.R')
rm(list=ls())
library(ISLR)
library(boot)
# Name: Andrew Weathers
# Date: 5 October 2018
# Purpose: Practice using resampling methods
set.seed(42)
attach(Default)
n <- nrow(Default)
train <- sample(n, n/2)
test <- seq(n)[-train]
glm.fit <- glm(default ~ balance + income, family=binomial, subset=train)
pred.probs <- predict(glm.fit, Default[test,], type="response")
pred.default <- rep("No", n/2)
pred.default[pred.probs > 0.5] <- "yes"
table(default[test], pred.default) # Confusion matrix
error.rate <- 100*mean(pred.default != default[test])
length(pred.default)
length(default[test])
source('~/manual_cv.R')
source('~/manual_cv.R')
myError
source('~/manual_cv.R')
myError
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
myError
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
myError
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
myError
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
source('~/manual_cv.R')
myError
source('~/manual_cv.R')
myError
source('~/manual_cv.R')
source('~/Career/Academics/cpsc6300/lab/manual_cv.R')
myError
setwd("~/Career/Academics/cpsc6300/Chicago_Crime")
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
setwd("~/Career/Academics/cpsc6300/Chicago_Crime/Src")
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
View(crash)
View(speed)
View(crash)
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
speed <- read.csv("../Data/Speed_Camera_Violations.csv")
crash <- read.csv("../Data/Traffic_Crashes_-_Crashes.csv")
# Remove observations which are missing a location
speed <- speed[!is.na(speed$LONGITUDE),]
speed <- speed[!is.na(speed$LATITUDE),]
crash <- crash[!is.na(crash$LONGITUDE),]
crash <- crash[!is.na(crash$LATITUDE),]
nearZeroVar(speed)
nearZeroVar(crash)
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
?length()
?length
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
length(crashRem)
crash <- crash[-crashRem]
speed[speed == ""] <- NA
crash[crash == ""] <- NA
str(crash)
View(crash)
View(speed)
View(speed)
camLocation <- subset(speed, CAMERA.ID, LATITUDE)
camLocation <- data.frame(speed$CAMERA.ID, speed$LATITUDE)
View(camLocation)
camLocation <- data.frame(speed$CAMERA.ID, speed$LATITUDE, speed$LONGITUDE)
View(camLocation)
View(camLocation)
str(speed$CAMERA.ID)
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
write.csv(crash, file="../Data/Mod_Crash.R")
write.csv(speed, file="../Data/Mod_Speed.R")
write.csv(crash, file="../Data/Mod_Crash.csv")
write.csv(speed, file="../Data/Mod_Speed.csv")
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/EDA.R')
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/EDA.R')
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/EDA.R')
speed <- read.csv("../Data/Mod_Speed.csv")
crash <- read.csv("../Data/Mod_Crash.csv")
View(speed)
View(crash)
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
speed <- read.csv("../Data/Speed_Camera_Violations.csv")
crash <- read.csv("../Data/Traffic_Crashes_-_Crashes.csv")
# Apply NA to all blank entries in our data
speed[speed == ""] <- NA
crash[crash == ""] <- NA
# Remove observations which are missing a location
speed <- speed[!is.na(speed$LONGITUDE),]
speed <- speed[!is.na(speed$LATITUDE),]
crash <- crash[!is.na(crash$LONGITUDE),]
crash <- crash[!is.na(crash$LATITUDE),]
# Remove observations with little variance
speedRem <- nearZeroVar(speed)
crashRem <- nearZeroVar(crash)
if(length(speedRem) > 0)
speed <- speed[-speedRem]
if(length(crashRem) > 0)
crash <- crash[-crashRem]
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/pre-processing.R')
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/EDA.R')
str(crash)
speed[, lapply(.SD, round, 2), "LONGITUDE"]
speed[, lapply(.SD, round, 2), "LATITUDE"]
?round
speed$LATITUDE <- round(speed$LATITUDE, 2)
speed$LONGITUDE < round(speed$LONGITUDE, 2)
speed$LATITUDE <- round(speed$LATITUDE, 2)
speed$LONGITUDE <- round(speed$LONGITUDE, 2)
View(speed)
p <- ggplot(Wage, aes(x=age, y=wage)) +
geom_point(size=2, shape=23)
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/nonlinear.R')
p <- ggplot(data=Wage, aes(x=age, y=wage)) +
geom_point(size=2, shape=23)
print(p)
plot(age, wage, cex=5, col="darkgray", main="Degree-4 Polynomial")
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/nonlinear.R')
lines(age.grid, pred$fit, lwd=2, col="blue")
plot(age, wage, cex=.5, col="darkgray", main="Degree-4 Polynomial")
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/nonlinear.R')
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/nonlinear.R')
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/nonlinear.R')
source('~/Career/Academics/cpsc6300/Chicago_Crime/Src/nonlinear.R')
attach(Wage)
# Polynomial Linear Regression
fit <- lm(wage ~ poly(age, 4))
age.grid <- seq(from=min(age), to=max(age))
pred <- predict(fit, newData=list(age=age.grid), se=TRUE)
se.bands <- cbind(pred$fit + 2*pred$se.fit, pred$fit-2*pred$se.fit)
plot(age, wage, cex=.5, col="darkgray", main="Degree-4 Polynomial")
lines(age.grid, pred$fit, lwd=2, col="blue")
age.grid <- seq(from=min(age), to=max(age))
pred <- predict(fit, newData=list(age=age.grid), se=TRUE)
se.bands <- cbind(pred$fit + 2*pred$se.fit, pred$fit-2*pred$se.fit)
plot(age, wage, cex=.5, col="darkgray", main="Degree-4 Polynomial")
length(age.grid)
length(pred$fit)
